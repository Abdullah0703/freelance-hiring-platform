{"numFailedTestSuites":1,"numFailedTests":8,"numPassedTestSuites":0,"numPassedTests":44,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":52,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1746021092336,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["NotificationController","createNotification"],"duration":50,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController createNotification should throw error if userId is not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if userId is not provided"},{"ancestorTitles":["NotificationController","createNotification"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController createNotification should create notification and return it","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create notification and return it"},{"ancestorTitles":["NotificationController","notifyAdminOnJobOperation"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyAdminOnJobOperation should throw error for invalid operation type","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for invalid operation type"},{"ancestorTitles":["NotificationController","notifyAdminOnJobOperation"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyAdminOnJobOperation should throw error if job not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if job not found"},{"ancestorTitles":["NotificationController","notifyAdminOnJobOperation"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyAdminOnJobOperation should create notifications for all admins on CREATE","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create notifications for all admins on CREATE"},{"ancestorTitles":["NotificationController","displayAllNotificationsForAdmin"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController displayAllNotificationsForAdmin should return notifications for admin","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return notifications for admin"},{"ancestorTitles":["NotificationController","displayAllNotificationsForAdmin"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController displayAllNotificationsForAdmin should throw error on failure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error on failure"},{"ancestorTitles":["NotificationController","markNotificationAsRead"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController markNotificationAsRead should throw error if notification not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if notification not found"},{"ancestorTitles":["NotificationController","markNotificationAsRead"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController markNotificationAsRead should mark notification as read","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should mark notification as read"},{"ancestorTitles":["NotificationController","getUnreadNotificationsCount"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController getUnreadNotificationsCount should return count of unread notifications","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return count of unread notifications"},{"ancestorTitles":["NotificationController","getUnreadNotificationsCount"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController getUnreadNotificationsCount should throw error on failure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error on failure"},{"ancestorTitles":["NotificationController","notifyJobStatusChange"],"duration":22,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected substring: \u001b[32m\"Job not found\"\u001b[39m\nReceived message:   \u001b[31m\"Failed to notify job status change\"\u001b[39m\n\n    \u001b[0m \u001b[90m 205 |\u001b[39m         } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 206 |\u001b[39m             console\u001b[33m.\u001b[39merror(\u001b[32m'Error notifying job status change:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m             \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Failed to notify job status change'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 208 |\u001b[39m         }\n     \u001b[90m 209 |\u001b[39m     }\n     \u001b[90m 210 |\u001b[39m     \u001b[90m//Notify Finalized Billers for the Job\u001b[39m\u001b[0m\n\n      \u001b[2mat Function.notifyJobStatusChange (\u001b[22mapp/controllers/notificationController.js\u001b[2m:207:19)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mtests/notificationController.test.js\u001b[2m:108:13)\u001b[22m","pass":false},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected substring: \u001b[32m\"Job not found\"\u001b[39m\nReceived message:   \u001b[31m\"Failed to notify job status change\"\u001b[39m\n\n    \u001b[0m \u001b[90m 205 |\u001b[39m         } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 206 |\u001b[39m             console\u001b[33m.\u001b[39merror(\u001b[32m'Error notifying job status change:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m             \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Failed to notify job status change'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 208 |\u001b[39m         }\n     \u001b[90m 209 |\u001b[39m     }\n     \u001b[90m 210 |\u001b[39m     \u001b[90m//Notify Finalized Billers for the Job\u001b[39m\u001b[0m\n\n      \u001b[2mat Function.notifyJobStatusChange (\u001b[22mapp/controllers/notificationController.js\u001b[2m:207:19)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mtests/notificationController.test.js\u001b[2m:108:13)\u001b[22m"}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected substring: \u001b[32m\"Job not found\"\u001b[39m\nReceived message:   \u001b[31m\"Failed to notify job status change\"\u001b[39m\n\n    \u001b[0m \u001b[90m 205 |\u001b[39m         } \u001b[36mcatch\u001b[39m (error) {\n     \u001b[90m 206 |\u001b[39m             console\u001b[33m.\u001b[39merror(\u001b[32m'Error notifying job status change:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m             \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Failed to notify job status change'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 208 |\u001b[39m         }\n     \u001b[90m 209 |\u001b[39m     }\n     \u001b[90m 210 |\u001b[39m     \u001b[90m//Notify Finalized Billers for the Job\u001b[39m\u001b[0m\n\n      \u001b[2mat Function.notifyJobStatusChange (\u001b[22mapp/controllers/notificationController.js\u001b[2m:207:19)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mtests/notificationController.test.js\u001b[2m:108:13)\u001b[22m\n    at Object.toThrow (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.toThrow (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\tests\\notificationController.test.js:108:83)\n    at Promise.then.completed (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"NotificationController notifyJobStatusChange should throw error if job not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should throw error if job not found"},{"ancestorTitles":["NotificationController","notifyJobStatusChange"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyJobStatusChange should not notify if job status is neither COMPLETED nor ABORTED","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not notify if job status is neither COMPLETED nor ABORTED"},{"ancestorTitles":["NotificationController","notifyJobStatusChange"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyJobStatusChange should notify billers and admins if job is COMPLETED","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should notify billers and admins if job is COMPLETED"},{"ancestorTitles":["NotificationController","notifyJobStatusChange"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyJobStatusChange should handle error and throw custom error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle error and throw custom error"},{"ancestorTitles":["NotificationController","notifyFinailizedBillers"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyFinailizedBillers should throw error if job not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if job not found"},{"ancestorTitles":["NotificationController","notifyFinailizedBillers"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyFinailizedBillers should not notify if job status is not FINALIZED","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not notify if job status is not FINALIZED"},{"ancestorTitles":["NotificationController","notifyFinailizedBillers"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyFinailizedBillers should notify billers and admins if job is FINALIZED","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should notify billers and admins if job is FINALIZED"},{"ancestorTitles":["NotificationController","notifyClientAndBillersOnStatusChange"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyClientAndBillersOnStatusChange should throw error if job not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if job not found"},{"ancestorTitles":["NotificationController","notifyClientAndBillersOnStatusChange"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyClientAndBillersOnStatusChange should not notify if job status is not INTERVIEW_SCHEDULED","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not notify if job status is not INTERVIEW_SCHEDULED"},{"ancestorTitles":["NotificationController","notifyClientAndBillersOnStatusChange"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyClientAndBillersOnStatusChange should notify client and billers if job status is INTERVIEW_SCHEDULED","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should notify client and billers if job status is INTERVIEW_SCHEDULED"},{"ancestorTitles":["NotificationController","notifyClientMeetAdmin"],"duration":1,"failureDetails":[{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31mundefined\u001b[39m"}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31mundefined\u001b[39m\n    at expect (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\expect\\build\\index.js:113:15)\n    at Object.expect (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\tests\\notificationController.test.js:189:19)\n    at Promise.then.completed (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"NotificationController notifyClientMeetAdmin should throw error if job not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should throw error if job not found"},{"ancestorTitles":["NotificationController","notifyClientMeetAdmin"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyClientMeetAdmin should not notify if job status is not INITIAL_MEETING_SCHEDULED","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not notify if job status is not INITIAL_MEETING_SCHEDULED"},{"ancestorTitles":["NotificationController","notifyClientMeetAdmin"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController notifyClientMeetAdmin should notify client if job status is INITIAL_MEETING_SCHEDULED and clientId exists","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should notify client if job status is INITIAL_MEETING_SCHEDULED and clientId exists"},{"ancestorTitles":["NotificationController","sendTicketNotification"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendTicketNotification should throw error if job not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if job not found"},{"ancestorTitles":["NotificationController","sendTicketNotification"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendTicketNotification should throw error if client is invalid","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if client is invalid"},{"ancestorTitles":["NotificationController","sendTicketNotification"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendTicketNotification should throw error if no admins found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if no admins found"},{"ancestorTitles":["NotificationController","sendTicketNotification"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendTicketNotification should do nothing if no tickets found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should do nothing if no tickets found"},{"ancestorTitles":["NotificationController","sendTicketNotification"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendTicketNotification should notify all admins for each ticket","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should notify all admins for each ticket"},{"ancestorTitles":["NotificationController","sendResolveTicketNotificationToClient"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendResolveTicketNotificationToClient should throw error if ticket not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if ticket not found"},{"ancestorTitles":["NotificationController","sendResolveTicketNotificationToClient"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendResolveTicketNotificationToClient should throw error if job not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if job not found"},{"ancestorTitles":["NotificationController","sendResolveTicketNotificationToClient"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendResolveTicketNotificationToClient should throw error if client is invalid","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if client is invalid"},{"ancestorTitles":["NotificationController","sendResolveTicketNotificationToClient"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendResolveTicketNotificationToClient should notify client if all data is valid","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should notify client if all data is valid"},{"ancestorTitles":["NotificationController","sendResolveTicketNotificationToAdmin"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendResolveTicketNotificationToAdmin should throw error if ticket not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if ticket not found"},{"ancestorTitles":["NotificationController","sendResolveTicketNotificationToAdmin"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendResolveTicketNotificationToAdmin should throw error if job not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if job not found"},{"ancestorTitles":["NotificationController","sendResolveTicketNotificationToAdmin"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendResolveTicketNotificationToAdmin should throw error if no admins found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if no admins found"},{"ancestorTitles":["NotificationController","sendResolveTicketNotificationToAdmin"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController sendResolveTicketNotificationToAdmin should notify all admins if all data is valid","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should notify all admins if all data is valid"},{"ancestorTitles":["NotificationController - Additional Edge Cases","createNotification"],"duration":1,"failureDetails":[{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31m{}\u001b[39m"}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31m{}\u001b[39m\n    at expect (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\expect\\build\\index.js:113:15)\n    at Object.expect (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\tests\\notificationController.test.js:306:19)\n    at Promise.then.completed (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"NotificationController - Additional Edge Cases createNotification should throw error if title is missing","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should throw error if title is missing"},{"ancestorTitles":["NotificationController - Additional Edge Cases","createNotification"],"duration":1,"failureDetails":[{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31m{}\u001b[39m"}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31m{}\u001b[39m\n    at expect (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\expect\\build\\index.js:113:15)\n    at Object.expect (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\tests\\notificationController.test.js:310:19)\n    at Promise.then.completed (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"NotificationController - Additional Edge Cases createNotification should throw error if description is missing","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should throw error if description is missing"},{"ancestorTitles":["NotificationController - Additional Edge Cases","createNotification"],"duration":1,"failureDetails":[{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31m{}\u001b[39m"}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31m{}\u001b[39m\n    at expect (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\expect\\build\\index.js:113:15)\n    at Object.expect (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\tests\\notificationController.test.js:314:19)\n    at Promise.then.completed (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"NotificationController - Additional Edge Cases createNotification should throw error if type is missing","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should throw error if type is missing"},{"ancestorTitles":["NotificationController - Additional Edge Cases","notifyAdminOnJobOperation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController - Additional Edge Cases notifyAdminOnJobOperation should handle empty admins array gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty admins array gracefully"},{"ancestorTitles":["NotificationController - Additional Edge Cases","markNotificationAsRead"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: \u001b[32m0\u001b[39m\nReceived number of calls: \u001b[31m1\u001b[39m\n\n1: called with 0 arguments","pass":true}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: \u001b[32m0\u001b[39m\nReceived number of calls: \u001b[31m1\u001b[39m\n\n1: called with 0 arguments\n    at Object.toHaveBeenCalled (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\tests\\notificationController.test.js:335:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"NotificationController - Additional Edge Cases markNotificationAsRead should not call save if notification is already read","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should not call save if notification is already read"},{"ancestorTitles":["NotificationController - Additional Edge Cases","getUnreadNotificationsCount"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController - Additional Edge Cases getUnreadNotificationsCount should return 0 if user has no unread notifications","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 0 if user has no unread notifications"},{"ancestorTitles":["NotificationController - Additional Edge Cases","displayAllNotificationsForAdmin"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController - Additional Edge Cases displayAllNotificationsForAdmin should return empty array if admin has no notifications","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return empty array if admin has no notifications"},{"ancestorTitles":["NotificationController - Additional Edge Cases","notifyJobStatusChange"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController - Additional Edge Cases notifyJobStatusChange should not throw if billers or admins are empty arrays","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not throw if billers or admins are empty arrays"},{"ancestorTitles":["NotificationController - Additional Edge Cases","notifyFinailizedBillers"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController - Additional Edge Cases notifyFinailizedBillers should not throw if billers or admins are empty arrays","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not throw if billers or admins are empty arrays"},{"ancestorTitles":["NotificationController - Additional Edge Cases","notifyClientAndBillersOnStatusChange"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController - Additional Edge Cases notifyClientAndBillersOnStatusChange should not throw if billers is empty","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not throw if billers is empty"},{"ancestorTitles":["NotificationController - Additional Edge Cases","notifyClientMeetAdmin"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController - Additional Edge Cases notifyClientMeetAdmin should not notify if clientId is missing","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not notify if clientId is missing"},{"ancestorTitles":["NotificationController - Additional Edge Cases","sendTicketNotification"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"NotificationController - Additional Edge Cases sendTicketNotification should not throw if tickets is undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not throw if tickets is undefined"},{"ancestorTitles":["NotificationController - Additional Edge Cases","sendResolveTicketNotificationToClient"],"duration":8,"failureDetails":[{}],"failureMessages":["Error: User ID is required\n    at Function.createNotification (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\app\\controllers\\notificationController.js:15:23)\n    at Function.createNotification [as sendResolveTicketNotificationToClient] (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\app\\controllers\\notificationController.js:404:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\tests\\notificationController.test.js:412:13)"],"fullName":"NotificationController - Additional Edge Cases sendResolveTicketNotificationToClient should not throw if client has no userId","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should not throw if client has no userId"},{"ancestorTitles":["NotificationController - Additional Edge Cases","sendResolveTicketNotificationToAdmin"],"duration":9,"failureDetails":[{}],"failureMessages":["Error: User ID is required\n    at Function.createNotification (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\app\\controllers\\notificationController.js:15:23)\n    at Function.createNotification [as sendResolveTicketNotificationToAdmin] (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\app\\controllers\\notificationController.js:435:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\tests\\notificationController.test.js:423:13)"],"fullName":"NotificationController - Additional Edge Cases sendResolveTicketNotificationToAdmin should not throw if admins have no userId","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should not throw if admins have no userId"},{"ancestorTitles":["Notifications Model"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notifications Model should have correct model definition","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have correct model definition"}],"coverage":{},"endTime":1746021094758,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNotificationController › notifyJobStatusChange › should throw error if job not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected substring: \u001b[32m\"Job not found\"\u001b[39m\n    Received message:   \u001b[31m\"Failed to notify job status change\"\u001b[39m\n\n        \u001b[0m \u001b[90m 205 |\u001b[39m         } \u001b[36mcatch\u001b[39m (error) {\n         \u001b[90m 206 |\u001b[39m             console\u001b[33m.\u001b[39merror(\u001b[32m'Error notifying job status change:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m             \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Failed to notify job status change'\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 208 |\u001b[39m         }\n         \u001b[90m 209 |\u001b[39m     }\n         \u001b[90m 210 |\u001b[39m     \u001b[90m//Notify Finalized Billers for the Job\u001b[39m\u001b[0m\n\n          \u001b[2mat Function.notifyJobStatusChange (\u001b[22mapp/controllers/notificationController.js\u001b[2m:207:19)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22mtests/notificationController.test.js\u001b[2m:108:13)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 106 |\u001b[39m         it(\u001b[32m'should throw error if job not found'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 107 |\u001b[39m             \u001b[33mJob\u001b[39m\u001b[33m.\u001b[39mfindByPk\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 108 |\u001b[39m             \u001b[36mawait\u001b[39m expect(\u001b[33mNotificationController\u001b[39m\u001b[33m.\u001b[39mnotifyJobStatusChange(\u001b[35m1\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[32m'Job not found'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 109 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 110 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 111 |\u001b[39m         it(\u001b[32m'should not notify if job status is neither COMPLETED nor ABORTED'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2mnode_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/notificationController.test.js\u001b[39m\u001b[0m\u001b[2m:108:83)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNotificationController › notifyClientMeetAdmin › should throw error if job not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\n    Received promise resolved instead of rejected\n    Resolved to value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 187 |\u001b[39m         it(\u001b[32m'should throw error if job not found'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 188 |\u001b[39m             \u001b[33mJob\u001b[39m\u001b[33m.\u001b[39mfindByPk\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 189 |\u001b[39m             \u001b[36mawait\u001b[39m expect(\u001b[33mNotificationController\u001b[39m\u001b[33m.\u001b[39mnotifyClientMeetAdmin(\u001b[35m1\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[32m'Job not found'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 190 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 191 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 192 |\u001b[39m         it(\u001b[32m'should not notify if job status is not INITIAL_MEETING_SCHEDULED'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat expect (\u001b[22m\u001b[2mnode_modules/expect/build/index.js\u001b[2m:113:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.expect (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/notificationController.test.js\u001b[39m\u001b[0m\u001b[2m:189:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNotificationController - Additional Edge Cases › createNotification › should throw error if title is missing\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\n    Received promise resolved instead of rejected\n    Resolved to value: \u001b[31m{}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 304 |\u001b[39m     describe(\u001b[32m'createNotification'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 305 |\u001b[39m         it(\u001b[32m'should throw error if title is missing'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 306 |\u001b[39m             \u001b[36mawait\u001b[39m expect(\u001b[33mNotificationController\u001b[39m\u001b[33m.\u001b[39mcreateNotification(\u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'desc'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'JOB_POSTED'\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 307 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 308 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 309 |\u001b[39m         it(\u001b[32m'should throw error if description is missing'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat expect (\u001b[22m\u001b[2mnode_modules/expect/build/index.js\u001b[2m:113:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.expect (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/notificationController.test.js\u001b[39m\u001b[0m\u001b[2m:306:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNotificationController - Additional Edge Cases › createNotification › should throw error if description is missing\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\n    Received promise resolved instead of rejected\n    Resolved to value: \u001b[31m{}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 308 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 309 |\u001b[39m         it(\u001b[32m'should throw error if description is missing'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 310 |\u001b[39m             \u001b[36mawait\u001b[39m expect(\u001b[33mNotificationController\u001b[39m\u001b[33m.\u001b[39mcreateNotification(\u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'title'\u001b[39m\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'JOB_POSTED'\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 311 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 312 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 313 |\u001b[39m         it(\u001b[32m'should throw error if type is missing'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat expect (\u001b[22m\u001b[2mnode_modules/expect/build/index.js\u001b[2m:113:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.expect (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/notificationController.test.js\u001b[39m\u001b[0m\u001b[2m:310:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNotificationController - Additional Edge Cases › createNotification › should throw error if type is missing\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\n    Received promise resolved instead of rejected\n    Resolved to value: \u001b[31m{}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 312 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 313 |\u001b[39m         it(\u001b[32m'should throw error if type is missing'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 314 |\u001b[39m             \u001b[36mawait\u001b[39m expect(\u001b[33mNotificationController\u001b[39m\u001b[33m.\u001b[39mcreateNotification(\u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'title'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'desc'\u001b[39m\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 315 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 316 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 317 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat expect (\u001b[22m\u001b[2mnode_modules/expect/build/index.js\u001b[2m:113:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.expect (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/notificationController.test.js\u001b[39m\u001b[0m\u001b[2m:314:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNotificationController - Additional Edge Cases › markNotificationAsRead › should not call save if notification is already read\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\n    Expected number of calls: \u001b[32m0\u001b[39m\n    Received number of calls: \u001b[31m1\u001b[39m\n\n    1: called with 0 arguments\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 333 |\u001b[39m             \u001b[33mNotifications\u001b[39m\u001b[33m.\u001b[39mfindByPk\u001b[33m.\u001b[39mmockResolvedValue(notification)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 334 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mNotificationController\u001b[39m\u001b[33m.\u001b[39mmarkNotificationAsRead(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 335 |\u001b[39m             expect(save)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 336 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoBe(notification)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 337 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 338 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/notificationController.test.js\u001b[39m\u001b[0m\u001b[2m:335:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNotificationController - Additional Edge Cases › sendResolveTicketNotificationToClient › should not throw if client has no userId\u001b[39m\u001b[22m\n\n    User ID is required\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 13 |\u001b[39m         \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m             \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39muserId) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 15 |\u001b[39m                 \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'User ID is required'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m             }\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m             \u001b[36mconst\u001b[39m notification \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mNotifications\u001b[39m\u001b[33m.\u001b[39mcreate({\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createNotification (\u001b[22m\u001b[2mapp/controllers/notificationController.js\u001b[2m:15:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createNotification [as sendResolveTicketNotificationToClient] (\u001b[22m\u001b[2mapp/controllers/notificationController.js\u001b[2m:404:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/notificationController.test.js\u001b[39m\u001b[0m\u001b[2m:412:13)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNotificationController - Additional Edge Cases › sendResolveTicketNotificationToAdmin › should not throw if admins have no userId\u001b[39m\u001b[22m\n\n    User ID is required\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 13 |\u001b[39m         \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m             \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39muserId) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 15 |\u001b[39m                 \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'User ID is required'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m             }\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m             \u001b[36mconst\u001b[39m notification \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mNotifications\u001b[39m\u001b[33m.\u001b[39mcreate({\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createNotification (\u001b[22m\u001b[2mapp/controllers/notificationController.js\u001b[2m:15:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createNotification [as sendResolveTicketNotificationToAdmin] (\u001b[22m\u001b[2mapp/controllers/notificationController.js\u001b[2m:435:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/notificationController.test.js\u001b[39m\u001b[0m\u001b[2m:423:13)\u001b[22m\u001b[2m\u001b[22m\n\n\n  \u001b[1m● \u001b[22mTest suite failed to run\n\n    WorkLog.belongsTo called with something that's not a subclass of Sequelize.Model\n\n    \u001b[0m \u001b[90m 12 |\u001b[39m \u001b[33mUser\u001b[39m\u001b[33m.\u001b[39mhasMany(\u001b[33mJob\u001b[39m\u001b[33m,\u001b[39m { foreignKey\u001b[33m:\u001b[39m \u001b[32m'clientId'\u001b[39m\u001b[33m,\u001b[39m \u001b[36mas\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'postings'\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 13 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m \u001b[33mWorkLog\u001b[39m\u001b[33m.\u001b[39mbelongsTo(\u001b[33mUser\u001b[39m\u001b[33m,\u001b[39m { foreignKey\u001b[33m:\u001b[39m \u001b[32m'billerId'\u001b[39m\u001b[33m,\u001b[39m allowNull\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 15 |\u001b[39m \u001b[33mUser\u001b[39m\u001b[33m.\u001b[39mhasMany(\u001b[33mWorkLog\u001b[39m\u001b[33m,\u001b[39m { foreignKey\u001b[33m:\u001b[39m \u001b[32m'billerId'\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 16 |\u001b[39m\n     \u001b[90m 17 |\u001b[39m \u001b[33mWorkLog\u001b[39m\u001b[33m.\u001b[39mbelongsTo(\u001b[33mJob\u001b[39m\u001b[33m,\u001b[39m { foreignKey\u001b[33m:\u001b[39m \u001b[32m'jobId'\u001b[39m\u001b[33m,\u001b[39m allowNull\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Function.<anonymous> (\u001b[22mnode_modules/sequelize/src/associations/mixin.js\u001b[2m:93:13)\u001b[22m\n      \u001b[2mat Object.belongsTo (\u001b[22mapp/models/index.js\u001b[2m:14:9)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22mtests/setup.js\u001b[2m:10:20)\u001b[22m\n","name":"C:\\Users\\User\\Desktop\\Freelance Hiring Platform\\backend\\tests\\notificationController.test.js","startTime":1746021094758,"status":"failed","summary":""}],"wasInterrupted":false}
